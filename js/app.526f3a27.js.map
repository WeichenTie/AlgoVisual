{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/Board.vue?d0ad","webpack:///./src/App.vue?fdf9","webpack:///./src/App.vue","webpack:///./src/components/Board.vue","webpack:///./src/components/SidebarOptions.vue","webpack:///./src/components/layoutComponents/PillToggleSwitch/PillToggleSwitch.vue","webpack:///./src/components/layoutComponents/PillToggleSwitch/PillToggleSwitch.vue?65ab","webpack:///./src/components/SidebarOptions.vue?7d8a","webpack:///./src/components/algorithms/maze_generation/MazeGenWrapper.js","webpack:///./src/components/algorithms/maze_generation/GenFilledBoard.js","webpack:///./src/components/algorithms/maze_generation/GenPrimsMaze.js","webpack:///./src/components/algorithms/maze_generation/GenMazeBorder.js","webpack:///./src/components/algorithms/pathfinding/FindDFSMaze.js","webpack:///./src/components/algorithms/pathfinding/FindAStarMaze.js","webpack:///./src/components/algorithms/pathfinding/PathfindingWrapper.js","webpack:///./src/components/algorithms/data_structures/graph/Graph.js","webpack:///./src/components/algorithms/search_runtime_manager/SearchRuntimeManager.js","webpack:///./src/components/Board.vue?2335","webpack:///./src/App.vue?8ecf","webpack:///./src/main.js","webpack:///./src/components/SidebarOptions.vue?44a7","webpack:///./src/components/layoutComponents/PillToggleSwitch/PillToggleSwitch.vue?dea4"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","selectedBrush","$event","handleStartMaze","handleStartSearch","isGeneratingMaze","fillBoard","weight","renderSpeed","Number","isGridShowing","Boolean","isAnimating","style","board","row","yIndex","id","cell","xIndex","ref","handleMouseDown","handleMouseEnter","handleMouseUp","for","type","checked","$emit","min","max","width","role","toggle","backgroundStyles","indicatorStyles","computed","this","transform","methods","__exports__","components","VueSlider","PillToggleSwitchVue","PillToggleSwitch","MazeGenWrapper","algorithm","endAction","done","timedLoop","Promise","resolve","reject","runTimedLoop","clearTimeout","timeout","runAlgorithm","stepper","setTimeout","instantLoop","stepSize","stepLoop","interval","setInterval","clearInterval","shouldStep","GenFilledBoard","filler","index","algorithmIteration","tableSize","forceDraw","GenPrimsMaze","mapper","inBounds","getNeighboursWithValue","getCenter","mapClear","position","a","b","next","neighbours","x","y","Math","floor","random","options","Map","forEach","e","set","optArr","iter","values","val","delete","nextNeighbours","size","draw","GenMazeBorder","FindDFSMaze","FindAStarMaze","start","end","posToInt","intToPos","int","comparator","aScore","scores","bScore","g","h","calculateH","abs","addNeighbours","pos","getTentative_gScore","neighbour","processNeighbour","has","Infinity","f","t_GScore","path","neighScore","openSet","open","queue","add","PriorityQueue","Set","curNode","dequeue","shortestPath","highlightAlgoDetailCell","PathfindingWrapper","doLoop","isPathFinding","isLive","Graph","adjacencyList","numVertex","vertex","keys","verts","removeEdge","src","dest","entries","asyncWait","ms","SearchRuntimeManager","init","graph","addVertex","vertices","startingPosition","flags","endingPosition","doSearch","run","pathAlgorithm","rerenderBoard","addEdge","doneSearch","search","doneLink","SidebarOptions","cellSize","maxFlags","brushValueMap","valueBrushMap","showAlgorithmDetails","tracerMarks","isDragging","mazeAlgorithm","linkerAlgorithm","isDirty","pathCells","lastValidPosition","beforeMount","newBoard","mounted","event","buttons","target","split","map","isEmpty","lastValPosBrush","handleStep","isAnimated","brush","highlightCell","highlight","$refs","classList","list","includes","pop","trueRerenderBoard","console","log","getCursorStyle","Board","method","render","createApp","App","mount"],"mappings":"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","file":"js/app.526f3a27.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Board.vue?vue&type=style&index=0&id=1c808876&lang=scss\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./App.vue?vue&type=style&index=0&id=5ec1fbc9&lang=scss\"","<template>\r\n  <h1>Pathfinding Visualisation</h1>\r\n  \r\n  <Board/>\r\n</template>\r\n\r\n<script>\r\nimport Board from './components/Board'\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    Board\r\n  },\r\n  data() {\r\n    return {\r\n    }\r\n  },\r\n  method: {\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@100;200;300;400;500;600;700;800;900&display=swap');\r\n:root {\r\n  --main-colour: rgb(27, 45, 83);\r\n  --complement-colour: #FFD585;\r\n  --font-family: 'Roboto Slab', serif;\r\n\r\n}\r\nhtml {\r\n  margin: 0;\r\n  padding: 0;\r\n  background-color: rgb(255, 255, 255);\r\n  //background-image: url(\"./assets/background.svg\");\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n}\r\n\r\nhead {\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: 'Roboto Slab', serif;\r\n}\r\n\r\nh1 {\r\n    background-color: var(--main-colour);\r\n    color: white;\r\n    display:block;\r\n    margin: 0;\r\n    width: 100%;\r\n    padding: 20px 0;\r\n    text-align: center;\r\n    transition: ease-in 0.2s;\r\n    cursor: pointer;\r\n}\r\n\r\n#app {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n</style>\r\n","<template lang=\"\">\r\n    <div class=\"grid\">\r\n        <!-- START OF HORRIBLE CODE  -->\r\n        <SidebarOptions\r\n            @on-brush-select=\"selectedBrush=$event\"\r\n            @on-generate-maze=\"handleStartMaze\"\r\n            @on-search=\"handleStartSearch\"\r\n            @on-stop=\"isGeneratingMaze=false\"\r\n            @on-clear=\"fillBoard\"\r\n            @on-weight-change=\"weight=$event\"\r\n            @on-render-speed-change=\"renderSpeed=Number($event)\"\r\n            @on-toggle-grid=\"isGridShowing=Boolean($event)\"\r\n            @on-toggle-animation=\"isAnimating=Boolean($event)\"\r\n        />\r\n        <!-- END OF HORRIBLE CODE  -->\r\n        <div class='board'>\r\n            <table\r\n                :style=\"{ // To satisfy mozilla browsers\r\n                    width: this.cellSize*this.tableSize +'px',\r\n                    height: this.cellSize*this.tableSize +'px',\r\n                    cursor: this.getCursorStyle()\r\n                }\">\r\n                <tr v-for='(row, yIndex) in this.board' :key=\"yIndex\" :id=\"'row-'+ yIndex\">\r\n                    <td v-for=\"(cell, xIndex) in row\" \r\n                        :key=\"xIndex\" \r\n                        :id=\"`${yIndex}-${xIndex}`\" \r\n                        :ref=\"`${yIndex}-${xIndex}`\"\r\n                        :class=\"'unvisited'\"\r\n                        v-on:mousedown=\"handleMouseDown($event)\"\r\n                        v-on:mouseenter=\"handleMouseEnter($event)\"\r\n                        v-on:mouseup=\"handleMouseUp()\"\r\n                        :style=\"{\r\n                            width: this.cellSize+'px',\r\n                            height: this.cellSize+'px',\r\n                            border: this.isGridShowing ? '#1f1f1f5b 1px dotted' : 'none',\r\n                        }\"\r\n                    >\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n        <div class=\"graph\"\r\n            :style=\"{\r\n                height: this.cellSize*this.tableSize +'px'\r\n            }\"\r\n        >\r\n\r\n        </div>\r\n    </div>\r\n    \r\n</template>\r\n<script lang=\"js\">\r\nimport SidebarOptions from './SidebarOptions';\r\nimport GenPrimsMaze from './algorithms/maze_generation/GenPrimsMaze';\r\nimport GenMazeAlternateWall from './algorithms/maze_generation/GenMazeAlternateWall';\r\nimport GenMazeBorder from './algorithms/maze_generation/GenMazeBorder';\r\nimport GenRecursiveDivisionMaze from './algorithms/maze_generation/GenRecursiveDivisionMaze';\r\nimport FindBFSMaze from './algorithms/pathfinding/FindBFSMaze';\r\nimport FindDFSMaze from './algorithms/pathfinding/FindDFSMaze';\r\nimport FindAStarMaze from './algorithms/pathfinding/FindAStarMaze';\r\nimport FindBestFSMaze from './algorithms/pathfinding/FindBestFSMaze';\r\nimport MazeGenWrapper from './algorithms/maze_generation/MazeGenWrapper';\r\nimport GenFilledBoard from './algorithms/maze_generation/GenFilledBoard';\r\nimport PathfindingWrapper from './algorithms/pathfinding/PathfindingWrapper';\r\nimport SearchRuntimeManager from './algorithms/search_runtime_manager/SearchRuntimeManager';\r\nexport default {\r\n    components: {\r\n        SidebarOptions,\r\n    },\r\n    data() {\r\n        return {\r\n            // Immutable data\r\n            tableSize: 35,\r\n            cellSize: 25,\r\n            maxFlags: 8,\r\n            brushValueMap: new Map(),\r\n            valueBrushMap: new Map(),\r\n            // Events\r\n            // Animation Settings\r\n            showAlgorithmDetails: true,\r\n            renderSpeed: 10,\r\n            isAnimating:true,\r\n            tracerMarks:[],\r\n            isDragging: false,\r\n            // UI\r\n            isGridShowing: true,\r\n            // Algorithms\r\n            isGeneratingMaze: false,\r\n            isPathFinding: false,\r\n            shouldStep: false,\r\n            stepSize:1,\r\n            mazeAlgorithm: GenPrimsMaze,\r\n            pathAlgorithm: FindAStarMaze,\r\n            linkerAlgorithm: null,\r\n            isLive: true,\r\n            // BoardState\r\n            selectedBrush: \"wall\",\r\n            weight: 1,\r\n            isDirty: false,\r\n            board: [],\r\n            flags: [],\r\n            pathCells:[], // Cells that are highlighted to display searched areas\r\n            startingPosition: null,\r\n            endingPosition: null,\r\n            // Temp Cell State\r\n            lastValidPosition: null, // For dragging a cell\r\n        }\r\n    },\r\n    beforeMount() {\r\n        // Setup the mappers\r\n        this.brushValueMap.set('unvisited', 0);\r\n        this.brushValueMap.set('wall', -1);\r\n        this.brushValueMap.set('start-node', -2);\r\n        this.brushValueMap.set('end-node', -3);\r\n        this.brushValueMap.set('weight', -4);\r\n        this.brushValueMap.set('flag', -5);\r\n\r\n        this.valueBrushMap.set(0, 'unvisited');\r\n        this.valueBrushMap.set(-1, 'wall');\r\n        this.valueBrushMap.set(-2, 'start-node');\r\n        this.valueBrushMap.set(-3, 'end-node');\r\n        this.valueBrushMap.set(-4, 'weight');\r\n        this.valueBrushMap.set(-5, 'flag');\r\n        // Populate the board\r\n        this.board = this.newBoard();\r\n\r\n        // Init starting and ending positions\r\n        this.startingPosition = [(this.tableSize - 1) / 2, (this.tableSize - 1) / 2 - 10];\r\n        this.endingPosition = [(this.tableSize - 1) / 2, (this.tableSize - 1) / 2 + 10];\r\n        \r\n    },\r\n    mounted(){\r\n        this.forceDraw(this.startingPosition, \"start-node\");\r\n        this.forceDraw(this.endingPosition, \"end-node\");\r\n    },\r\n\r\n    methods: {\r\n        //-----------------------------------------------------\r\n        // Utils\r\n        //-----------------------------------------------------\r\n        newBoard: function () {\r\n            const board = [];\r\n            for (let i = 0; i < this.tableSize; i++) {\r\n                const row = [];\r\n                for (let j = 0; j < this.tableSize; j++) {\r\n                    row.push(0);\r\n                }\r\n                board.push(row);\r\n            }\r\n            return board;\r\n        },\r\n\r\n        //-----------------------------------------------------\r\n        // Handlers\r\n        //-----------------------------------------------------\r\n        // Actions taken when a cell is pressed\r\n        handleMouseDown: function (event){\r\n            if (event.buttons !== 1) return; // Returns if not left click\r\n            if (this.isGeneratingMaze || this.isPathFinding) return;\r\n            let position = event.target.id.split('-').map(pos => {\r\n                return Number(pos);\r\n            });\r\n            // Dragging behaviour\r\n            if (this.selectedBrush === \"drag\") {\r\n                if (this.isEmpty(position)) return;\r\n                this.isDragging = true;\r\n                this.lastValidPosition = position;\r\n            }\r\n            // Drawing behaviour\r\n            else {\r\n                this.draw(position);\r\n            }\r\n            if (this.isLive) {\r\n                this.rerenderBoard();\r\n                SearchRuntimeManager(this)();\r\n            }\r\n        },\r\n        handleMouseEnter: function (event) {\r\n            if (this.isGeneratingMaze || this.isPathFinding) return;\r\n            if (event.buttons !== 1) return; // Returns if not left click\r\n            let position = event.target.id.split('-').map(pos => {\r\n                return Number(pos);\r\n            });\r\n            if (this.selectedBrush === \"drag\") {\r\n                if (this.lastValidPosition === null) return;\r\n                else if (!this.isEmpty(position)) return;\r\n                this.rerenderBoard();\r\n                const lastValPosBrush = this.valueBrushMap.get(this.board[this.lastValidPosition[0]][this.lastValidPosition[1]]);\r\n                this.draw(this.lastValidPosition, \"unvisited\");\r\n                this.draw(position, lastValPosBrush);\r\n                this.lastValidPosition = position;\r\n            }\r\n            // Drawing behaviour\r\n            else {\r\n                this.draw(position);\r\n            }\r\n            if (this.isLive) {\r\n                this.rerenderBoard();\r\n                SearchRuntimeManager(this)();\r\n            }\r\n        },\r\n        handleMouseUp: function () {\r\n            this.lastValidPosition = null;\r\n            this.isDragging = false;\r\n        },\r\n        handleStartMaze: async function () {\r\n            if (this.isGeneratingMaze) return;\r\n            this.isGeneratingMaze = true;\r\n            this.rerenderBoard();\r\n            await MazeGenWrapper(this, await this.mazeAlgorithm(this), ()=>{this.isGeneratingMaze = false}).runAlgorithm();\r\n        },\r\n        handleStartSearch: async function () {\r\n            if (this.isPathFinding) return;\r\n            this.isPathFinding = true;\r\n            this.rerenderBoard();\r\n            await SearchRuntimeManager(this)();\r\n            //await PathfindingWrapper(this, await this.pathAlgorithm(this, this.startingPosition, this.endingPosition), ()=>{this.isPathFinding = false}).runAlgorithm();\r\n        },\r\n        handleStep: function () {\r\n            this.shouldStep = true;\r\n        },\r\n\r\n        //-----------------------------------------------------\r\n        // Algorithms\r\n        //-----------------------------------------------------\r\n\r\n        //-----------------------------------------------------\r\n        // Cell manipulation \r\n        //-----------------------------------------------------\r\n        isEmpty: function(position) {\r\n            return this.board[position[0]][position[1]] == 0;\r\n        },\r\n        \r\n        draw: function(position, selectedBrush=this.selectedBrush, isAnimated=(this.isAnimating && !this.isLive)) {\r\n            if (selectedBrush === \"unvisited\") {\r\n                this.forceDraw(position, selectedBrush, isAnimated);\r\n            }\r\n            else if (this.isEmpty(position)) {\r\n                if (selectedBrush === \"end-node\") {\r\n                    if (this.endingPosition !== null) return;\r\n                    this.endingPosition = position;\r\n                }\r\n                else if (selectedBrush === \"start-node\") {\r\n                    if (this.startingPosition !== null) return;\r\n                    this.startingPosition = position;\r\n                }\r\n                else if (selectedBrush === \"flag\") {\r\n                    if (this.flags.length <= 6) {\r\n                        this.flags.push(position);\r\n                    } else {\r\n                        return;\r\n                    }\r\n                }\r\n                this.forceDraw(position, selectedBrush, isAnimated)\r\n            }\r\n        },\r\n        forceDraw: function(position, selectedBrush=this.selectedBrush, isAnimated=isAnimated=(this.isAnimating && !this.isLive)) {\r\n            const brush = selectedBrush + (isAnimated? \"-animated\":\"\");\r\n            if (this.board[position[0]][position[1]] === -2) { // start node\r\n                this.startingPosition = null;\r\n            }\r\n            else if (this.board[position[0]][position[1]] === -3) {\r\n                this.endingPosition = null;\r\n            }\r\n            else if (this.board[position[0]][position[1]] === -5) {\r\n                for (let i = 0; i < this.flags.length; i++) {\r\n                    if (this.flags[i][0] === position[0] && this.flags[i][1] === position[1]) {\r\n                        this.flags.splice(i, 1);\r\n                    }\r\n                }\r\n            }\r\n            this.rerenderBoard();\r\n            this.highlightCell(position, brush);\r\n            this.board[position[0]][position[1]] = this.brushValueMap.get(selectedBrush);\r\n        },\r\n\r\n        // Highlight cell at position with specific colour via classname manipulation\r\n        highlightCell: function(position, highlight) {\r\n            const pos = `${position[0]}-${position[1]}`;\r\n            this.$refs[pos][0].classList.value = [highlight];\r\n        },\r\n\r\n        // Temporary highlight cell at position with specific colour via classname manipulation\r\n        highlightAlgoDetailCell: function(position, highlight, isAnimated=(this.isAnimating && !this.isLive)) {\r\n            const brush = highlight + (isAnimated? \"-animated\":\"\");\r\n            const pos = `${position[0]}-${position[1]}`;\r\n            const list = this.$refs[pos][0].classList.value.split(\" \");\r\n            if (list[0].includes(\"unvisited\")) {\r\n                this.tracerMarks.push(pos);\r\n                this.$refs[pos][0].classList.value = `${list[0]} ${brush}`;\r\n            }\r\n        },\r\n\r\n        // Clears the board\r\n        fillBoard: function(filler) {\r\n            for (let i = 0; i < this.tableSize; i++) {\r\n                for (let j = 0; j < this.tableSize; j++) {\r\n                    this.draw([i,j], filler);\r\n                }\r\n            }\r\n        },\r\n        //-----------------------------------------------------\r\n        // Rerendering functions\r\n        //-----------------------------------------------------\r\n        rerenderBoard: function() {\r\n            while (this.tracerMarks.length > 0) {\r\n                const pos = this.tracerMarks.pop();\r\n                //const list = this.$refs[pos][0].classList.value.split(\" \");\r\n                this.$refs[pos][0].classList.value = \"unvisited\" ;//`${list[0]}`;\r\n            }\r\n            this.tracerMarks = [];\r\n        },\r\n        trueRerenderBoard: function() {\r\n            this.board.forEach((row)=>console.log(row));\r\n        },\r\n\r\n        //-----------------------------------------------------\r\n        // Styling functions\r\n        //-----------------------------------------------------\r\n        getCursorStyle: function() {\r\n            if (this.isGeneratingMaze || this.isPathFinding) {\r\n                return \"not-allowed\";\r\n            }\r\n            else if (this.selectedBrush === \"drag\") {\r\n                if (this.isDragging) return 'grabbing';\r\n                else return \"grab\";\r\n            }\r\n            else {\r\n                return \"pointer\"\r\n            }\r\n        }\r\n    },\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n$table-radius: 10px;\r\n\r\n\r\n@keyframes wallAnimation {\r\n    0%{\r\n        transform: scale(0);\r\n        background-color: rgb(224, 187, 228);\r\n        border-radius: 15px;\r\n    }\r\n    50% {\r\n        transform: scale(1.3);\r\n    }\r\n    75% {\r\n        border-radius: 6px;\r\n    } \r\n}\r\n@keyframes unvisitedAnimation {\r\n    0%{\r\n        transform: scale(0);\r\n        background-color:  #CFD1FC;\r\n    }\r\n    25%{\r\n        border-radius: 15px;\r\n    }\r\n    50% {\r\n        transform: scale(1.3);\r\n        }\r\n    75% {\r\n        border-radius: 15px;\r\n    }\r\n    100%{\r\n        transform:scale(0);\r\n        background-color: rgb(255, 255, 255);\r\n    }\r\n}\r\n@keyframes flagAnimation {\r\n    0%{\r\n        transform: scale(0);\r\n        background-color: rgb(255, 180, 180);\r\n        border-radius: 15px;\r\n    }\r\n    50% {\r\n        transform: scale(1.3);\r\n    }\r\n    75% {\r\n        border-radius: 6px;\r\n    } \r\n}\r\n\r\n@keyframes detailsRedAnimation {\r\n    0%{\r\n        transform: scale(0);\r\n    }\r\n    25% {\r\n        border-radius: 15px;\r\n    }\r\n    50% {\r\n        border: rgb(229, 30, 255) solid 5px;\r\n    }\r\n    75% {\r\n        border-radius: 6px;\r\n    } \r\n}\r\n@keyframes searchingAnimation {\r\n    0%{\r\n        transform: scale(0);\r\n        border-radius: 15px;\r\n        background-color: #9900ff;\r\n    }\r\n    25% {\r\n        \r\n        }\r\n    50% {\r\n        transform: scale(1.3);\r\n        background-color: #ab2dff;\r\n    }\r\n    75% {\r\n        background-color: #ffd038;\r\n    } \r\n}\r\n//--------------------------------------------------\r\n// Walls\r\n.wall {\r\n    background-color: #8a66ff;\r\n}\r\n.wall-animated {\r\n    background-color: #8a66ff;\r\n    animation: wallAnimation linear 0.4s;\r\n}\r\n//--------------------------------------------------\r\n// Unvisited\r\n.unvisited {\r\n    background-color: rgb(255, 255, 255);\r\n}\r\n.unvisited-animated {\r\n    background-color: rgb(255, 255, 255);\r\n    animation: unvisitedAnimation linear 0.4s;\r\n    &:hover {\r\n        background-color: rgba(255, 255, 255, 0.294);\r\n    }\r\n}\r\n\r\n\r\n.flag {\r\n    background-color: rgb(255, 98, 98);\r\n}\r\n.flag-animated {\r\n    background-color: rgb(255, 98, 98);\r\n    animation: flagAnimation linear 0.4s;\r\n}\r\n\r\n.grid {\r\n    margin-top: 40px;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n}\r\n\r\n.board {\r\n    color: black;\r\n    width: fit-content;\r\n    padding: 5px;\r\n    border: 6px solid #1f1f1f;\r\n    border-radius: 0 15px 15px;\r\n    margin: 0 auto 100px;\r\n    background-color: rgb(255, 255, 255);\r\n    box-shadow: 0 0 10px #957DAD;\r\n}\r\ntable {\r\n    table-layout: fixed;\r\n    border-collapse:collapse;\r\n    background-color: rgb(255, 255, 255);\r\n    box-sizing: border-box;\r\n    :first-child {\r\n        :first-child {\r\n            border-radius: $table-radius 0 0 0;\r\n        }\r\n        :last-child {\r\n            border-radius: 0 $table-radius 0 0;\r\n        }\r\n    }\r\n    :last-child {\r\n        :first-child {\r\n            border-radius: 0 0 0 $table-radius;\r\n        }\r\n        :last-child {\r\n            border-radius: 0 0 $table-radius 0;\r\n        }\r\n    }\r\n}\r\ntr {\r\n    box-sizing: content-box;\r\n    width: 100%;\r\n}\r\ntd {\r\n    box-sizing: border-box;\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n.start-node {\r\n    background-color: rgb(145, 255, 0);\r\n    &:hover {\r\n        background-color: rgba(49, 255, 159, 0.863);\r\n    }\r\n}\r\n.end-node {\r\n    background-color: rgb(255, 155, 25);\r\n    &:hover {\r\n        background-color: rgba(255, 217, 49, 0.294);\r\n    }\r\n}\r\n\r\n.start-node-animated {\r\n    background-color: rgb(145, 255, 0);\r\n    &:hover {\r\n        background-color: rgba(49, 255, 159, 0.863);\r\n    }\r\n}\r\n.end-node-animated {\r\n    background-color: rgb(255, 155, 25);\r\n    &:hover {\r\n        background-color: rgba(255, 217, 49, 0.294);\r\n    }\r\n}\r\n.red-detail {\r\n    animation: detailsRedAnimation linear 1s;\r\n}\r\n.temp-animated {\r\n    background-color: #cdff8b;\r\n}\r\n\r\n.temp1-animated {\r\n    background-color: #ffd900;\r\n}\r\n.temp2-animated {\r\n    animation: searchingAnimation ease-in 0.4s;\r\n    background-color: #cdfffb;\r\n}\r\n.temp3-animated {\r\n    background-color: #2f00ff;\r\n}\r\n\r\n.temp {\r\n    background-color: #cdff8b;\r\n}\r\n\r\n.temp1 {\r\n    background-color: #ffd900;\r\n}\r\n.temp2 {\r\n    background-color: #cdfffb;\r\n}\r\n.temp3 {\r\n    background-color: #2f00ff;\r\n}\r\n\r\n//------------------------------------------------------\r\n.graph {\r\n    width: 400px;\r\n    background-color: #1f1f1f;\r\n}\r\n\r\n</style>","<template lang=\"\">\r\n    <div class=\"sidebar\">\r\n        <h2>Tools</h2>\r\n        <form>\r\n            <div class=\"option\">\r\n                <label for=\"wall-brush\">Wall</label>\r\n                <input \r\n                    type=\"radio\"\r\n                    name=\"brush\" \r\n                    id=\"wall-brush\" \r\n                    class=\"brush-button\"\r\n                    checked\r\n                    @change=\"$emit('on-brush-select', 'wall')\">\r\n            </div>\r\n            <div class=\"option\">\r\n                <label for=\"weight-brush\">Weight</label>\r\n                <VueSlider \r\n                    v-model=\"weight\"\r\n                    :min=\"1\"\r\n                    :max=\"100\"\r\n                    width='150px'\r\n                    @change=\"$emit('on-weight-change', Number(weight))\"/>\r\n                <input\r\n                    type=\"radio\"\r\n                    name=\"brush\"\r\n                    id=\"weight-brush\"\r\n                    class=\"brush-button\"\r\n                    @change=\"$emit('on-brush-select', 'weight')\">\r\n            </div>\r\n            <div class=\"option\">\r\n                <label for=\"flag-brush\">Flag</label>\r\n                <input\r\n                    type=\"radio\"\r\n                    name=\"brush\"\r\n                    id=\"flag-brush\"\r\n                    class=\"brush-button\"\r\n                    @change=\"$emit('on-brush-select', 'flag')\">\r\n            </div>\r\n            <div class=\"option\">\r\n                <label for=\"start-node-brush\">Start Node</label>\r\n                <input\r\n                    type=\"radio\"\r\n                    name=\"brush\"\r\n                    id=\"start-node-brush\"\r\n                    class=\"brush-button\"\r\n                    @change=\"$emit('on-brush-select', 'start-node')\">\r\n            </div>\r\n            <div class=\"option\">\r\n                <label for=\"end-node-brush\">End Node</label>\r\n                <input\r\n                    type=\"radio\"\r\n                    name=\"brush\"\r\n                    id=\"end-node-brush\"\r\n                    class=\"brush-button\"\r\n                    @change=\"$emit('on-brush-select', 'end-node')\">\r\n            </div>\r\n            <div class=\"option\">\r\n                <label for=\"eraser-brush\">Eraser</label>\r\n                <input\r\n                    type=\"radio\"\r\n                    name=\"brush\"\r\n                    id=\"eraser-brush\"\r\n                    class=\"brush-button\"\r\n                    @change=\"$emit('on-brush-select', 'unvisited')\">\r\n            </div>\r\n            <div class=\"option\">\r\n                <label for=\"drag-brush\">Drag Tool</label>\r\n                <input\r\n                    type=\"radio\"\r\n                    name=\"brush\"\r\n                    id=\"drag-brush\"\r\n                    class=\"brush-button\"\r\n                    @change=\"$emit('on-brush-select', 'drag')\">\r\n            </div>\r\n            <div class=\"option\">\r\n                <button v-on:click.prevent=\"$emit('on-clear', 'unvisited')\">Clear Board</button>\r\n            </div>\r\n        </form>\r\n        <form>\r\n            <h2>General Settings</h2>\r\n            <div class=\"option\">\r\n                <label for=\"renderSpeed\">Simulation Speed: </label>\r\n                <select \r\n                    class=\"drop-down\"\r\n                    id=\"renderSpeed\"\r\n                    v-model=\"renderSpeed\"\r\n                    @change=\"$emit('on-render-speed-change',renderSpeed)\">\r\n                    <option :value='0'>Instant</option>\r\n                    <option :value='10'>Faster</option>\r\n                    <option :value='50'>Fast</option>\r\n                    <option :value='100'>Normal</option>\r\n                    <option :value='500'>Slow</option>\r\n                    <option :value='-1'>Step</option>\r\n                </select>\r\n            </div>\r\n            <div class=\"option\">\r\n                <label for=\"live-mode\">Live Mode:</label>\r\n                <PillToggleSwitchVue\r\n                    id=\"live-mode\"\r\n                />\r\n            </div>\r\n            <div class=\"option\">\r\n                <label for=\"grid-view\">Toggle Grid:</label>\r\n                <PillToggleSwitchVue\r\n                    id=\"grid-view\"\r\n                    @on-toggle=\"$emit('on-toggle-grid', $event)\"\r\n                />\r\n            </div>\r\n            <div class=\"option\">\r\n                <label for=\"toggle-animations\">Toggle Animations:</label>\r\n                <PillToggleSwitchVue\r\n                    id=\"toggle-animations\"\r\n                    @on-toggle=\"$emit('on-toggle-animation', $event)\"\r\n                />\r\n            </div>\r\n            \r\n        </form>\r\n        <form>\r\n            <h2>Algorithm Settings</h2>\r\n            <div class=\"option\">\r\n                <label>Maze Generation: </label>\r\n                <select>\r\n                    <option :value='10'>Randomised Prims Algorithm</option>\r\n                </select>\r\n            </div>\r\n            <div class=\"option\">\r\n                <label>Pathfinder: </label>\r\n                <select>\r\n                    <option :value='0'>Breadth First Search</option>\r\n                    <option :value='10'>Depth First Search</option>\r\n                </select>\r\n            </div>\r\n            <div class=\"option\">\r\n                <label>Graph: </label>\r\n                <select></select>\r\n            </div>\r\n            <div class=\"run-algo\">\r\n                <button v-on:click.prevent=\"$emit('on-generate-maze')\">Generate Maze</button>\r\n                <div></div>\r\n                <button v-on:click.prevent=\"$emit('on-search')\">Search</button>\r\n                <div></div>\r\n                <button v-on:click.prevent=\"$emit('on-stop')\">Stop</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n<script>\r\n    import VueSlider from 'vue-slider-component'\r\n    import 'vue-slider-component/theme/antd.css'\r\n    import PillToggleSwitchVue from './layoutComponents/PillToggleSwitch/PillToggleSwitch.vue'\r\n\r\nexport default {\r\n    components: {\r\n        VueSlider,\r\n        PillToggleSwitchVue\r\n    },\r\n    data() {\r\n        return {\r\n            weight: 1,\r\n            renderSpeed: 10,\r\n        }\r\n    },\r\n}\r\n\r\n\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n    $primary: rgb(27, 45, 83);\r\n    .sidebar {\r\n        h2 {\r\n            margin-bottom: 0;\r\n        }\r\n        position: relative;\r\n        width: 280px;\r\n        height: fit-content;\r\n        border-radius: 1rem 0 0 1rem;\r\n        color: rgb(255, 255, 255);\r\n        background-color: $primary;\r\n        box-shadow: 0 0 10px #957DAD;\r\n        padding: 20px;\r\n        form {\r\n            label {\r\n                font-size: 15px;\r\n            }\r\n            input[type=radio] {\r\n                box-shadow: inset 0 0 0 1px rgb(255, 255, 255);\r\n                width: 20px;\r\n                height: 20px;\r\n                padding: 0;\r\n                margin: 0;\r\n                appearance: none;\r\n                transition: box-shadow 150ms cubic-bezier(.95,.15,.5,1.25);\r\n                cursor: pointer;\r\n                border-radius: 100px;\r\n                &:checked {\r\n                    box-shadow: inset 0 0 0 6px rgb(255, 255, 255);\r\n                }\r\n            }\r\n            .option {\r\n                margin: 7px 0;\r\n                display: flex;\r\n                flex-direction: row;\r\n                align-items: center;\r\n                justify-content: space-between;\r\n                width: 280px;\r\n                height: fit-content;\r\n                .drop-down {\r\n                    transition: 1 ease;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .run-algo {\r\n        display: flex;\r\n        margin: 5px auto;\r\n        width: 100%;\r\n        flex-direction: column;\r\n    }\r\n    select {\r\n        width: 140px;\r\n        font-family: var(--font-family);\r\n    }\r\n    button {\r\n        width: 100%;\r\n        height: 30px;\r\n        margin: 5px auto;\r\n        font-family: var(--font-family);\r\n        background-color: #ffffff;\r\n        border-radius: 5px;\r\n    }\r\n</style>","<template>\r\n  <div>\r\n    <span\r\n      class=\"toggle-wrapper\"\r\n      role=\"checkbox\"\r\n      @click=\"toggle\"\r\n    >\r\n      <span\r\n        class=\"toggle-background\"\r\n        :class=\"backgroundStyles\"\r\n      />\r\n      <span\r\n        class=\"toggle-indicator\"\r\n        :style=\"indicatorStyles\" \r\n      />\r\n    </span>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            value: true,\r\n        }\r\n    },\r\n    computed: {\r\n        backgroundStyles() {\r\n            return {\r\n                'gold-mid': this.value,\r\n                'gray-lighter': !this.value\r\n            };\r\n        },\r\n    indicatorStyles() {\r\n        return { transform: this.value ? 'translateX(14px)' : 'translateX(0)' };\r\n    }\r\n  },\r\n    methods: {\r\n        toggle() {\r\n            this.value = !this.value;\r\n            this.$emit('on-toggle', this.value);\r\n        }\r\n    }\r\n};\r\n</script>\r\n<style lang=\"scss\">\r\n    .gold-mid{\r\n        background-color: salmon;\r\n    }\r\n\r\n    .gray-lighter{\r\n        background-color: #c2c2c2;\r\n    }\r\n\r\n    .toggle-wrapper {\r\n        margin: auto 0;\r\n        display: block;\r\n        position: relative;\r\n        cursor: pointer;\r\n        width: 32px;\r\n        height: 18px;\r\n        border-radius: 9999px;\r\n    }\r\n\r\n    .toggle-wrapper:focus {\r\n        outline: 0;\r\n    }\r\n\r\n    .toggle-background {\r\n        display: inline-block;\r\n        border-radius: 9999px;\r\n        height: 100%;\r\n        width: 100%;\r\n        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);\r\n        transition: background-color .4s ease;\r\n    }\r\n\r\n    .toggle-indicator {\r\n        position: absolute;\r\n        height: 14px;\r\n        width: 14px;\r\n        left: 2px;\r\n        bottom: 2px;\r\n        background-color: #ffffff;\r\n        border-radius: 9999px;\r\n        box-shadow:  0 2px 4px rgba(0, 0, 0, 0.1);\r\n        transition: transform .4s ease;\r\n    }\r\n</style>","import { render } from \"./PillToggleSwitch.vue?vue&type=template&id=3fa96e2c\"\nimport script from \"./PillToggleSwitch.vue?vue&type=script&lang=js\"\nexport * from \"./PillToggleSwitch.vue?vue&type=script&lang=js\"\n\nimport \"./PillToggleSwitch.vue?vue&type=style&index=0&id=3fa96e2c&lang=scss\"\n\nimport exportComponent from \"D:\\\\Projects\\\\Frontend\\\\Algorithms-Visualisation\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./SidebarOptions.vue?vue&type=template&id=113bf3f7&scoped=true&lang=true\"\nimport script from \"./SidebarOptions.vue?vue&type=script&lang=js\"\nexport * from \"./SidebarOptions.vue?vue&type=script&lang=js\"\n\nimport \"./SidebarOptions.vue?vue&type=style&index=0&id=113bf3f7&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\Projects\\\\Frontend\\\\Algorithms-Visualisation\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-113bf3f7\"]])\n\nexport default __exports__","function MazeGenWrapper(data, algorithm, endAction=(()=>{})) {\r\n    let done = false;\r\n\r\n    const timedLoop = async () => {\r\n        return new Promise((resolve, reject) => {\r\n            const runTimedLoop = async () => {\r\n                // Maze Generation completely stopped\r\n                if (!data.isGeneratingMaze) {\r\n                    clearTimeout(timeout);\r\n                    resolve();\r\n                }\r\n                // Set to instant render\r\n                else if (data.renderSpeed === 0) {\r\n                    clearTimeout(timeout);\r\n                    await runAlgorithm();\r\n                    resolve();\r\n                }\r\n                // Set to step mode\r\n                else if (data.renderSpeed === -1) {\r\n                    clearTimeout(timeout);\r\n                    await runAlgorithm();\r\n                    resolve();\r\n                }\r\n                // Run algorithm and check if it is done\r\n                else {\r\n                    if (stepper()) {\r\n                        clearTimeout(timeout);\r\n                        resolve();\r\n                    } else {\r\n                        timeout = setTimeout(() => runTimedLoop(), data.renderSpeed);\r\n                    }\r\n                }\r\n            }\r\n            let timeout = setTimeout(() => runTimedLoop(), data.renderSpeed);\r\n        });\r\n    }\r\n    const instantLoop = () => {\r\n        while (!algorithm()) {\r\n            continue;\r\n        }\r\n        done = true;\r\n    }\r\n\r\n    const stepper = () => {\r\n        for (let i = 0; i < data.stepSize; i++) {\r\n            if (algorithm()) {\r\n                done = true;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const stepLoop = async () => {\r\n        return new Promise((resolve, reject) => {\r\n            const interval = setInterval(async () => {\r\n                // Maze Generation completely stopped\r\n                if (!data.isGeneratingMaze) {\r\n                    resolve();\r\n                    clearInterval(interval);\r\n                }\r\n                // Set to instant render\r\n                else if (data.renderSpeed === 0) {\r\n                    clearInterval(interval);\r\n                    await runAlgorithm();\r\n                    resolve();\r\n                }\r\n                // Set to timed render\r\n                else if (data.renderSpeed !== -1) {\r\n                    clearInterval(interval);\r\n                    await runAlgorithm();\r\n                    resolve();\r\n                }\r\n                // Run algorithm and check if it is done\r\n                else if (data.shouldStep) {\r\n                    if (stepper()) {\r\n                        resolve();\r\n                        clearInterval(interval);\r\n                    }\r\n                    data.shouldStep = false;\r\n                }\r\n            }, 20);\r\n        });\r\n    }\r\n    const runAlgorithm = async () => {\r\n        if (data.renderSpeed === 0) {\r\n            instantLoop();\r\n        }\r\n        else if (data.renderSpeed === -1) {\r\n            await stepLoop();\r\n        }\r\n        else {\r\n            await timedLoop();\r\n        }\r\n        if (done) {\r\n            endAction();\r\n        }\r\n    }\r\n    return { runAlgorithm, instantLoop };\r\n}\r\n\r\nexport default MazeGenWrapper;","async function GenFilledBoard (data, filler='wall') {\r\n    // values\r\n    let index = 0;\r\n    \r\n    const algorithmIteration = () => {\r\n        if (index >= data.tableSize) return true;\r\n        for (let i = 0; i < data.tableSize; i++) {\r\n            data.forceDraw([index, i], filler);\r\n        }\r\n        index += 1;\r\n        return index >= data.tableSize;\r\n    }\r\n    return algorithmIteration;\r\n}\r\n \r\nexport default GenFilledBoard;","import MazeGenWrapper from \"./MazeGenWrapper\";\r\nimport GenFilledBoard from \"./GenFilledBoard\"\r\n\r\nasync function GenPrimsMaze (data, wallStyle=()=>{return \"wall\"}) {\r\n    function mapper(position) {\r\n        return position[0]*data.tableSize + position[1];\r\n    }\r\n    //----------------------------------------\r\n    //\r\n    // Prims Start here \r\n    //\r\n    //-----------------------------------------\r\n    await MazeGenWrapper(data, await GenFilledBoard(data, \"wall\")).runAlgorithm();\r\n    function inBounds(x, y) {\r\n        return (x > 0 && x < data.tableSize - 1) && (y > 0 && y < data.tableSize - 1)\r\n    }\r\n    function getNeighboursWithValue(next, value) {\r\n        const neighbours = [];\r\n        if (inBounds(next[1] + 2, next[0]) && data.board[next[0]][next[1] + 2] === value) {\r\n            neighbours.push([next[0], next[1] + 2]);\r\n        }\r\n        if (inBounds(next[1] - 2, next[0]) && data.board[next[0]][next[1] - 2] === value) {\r\n            neighbours.push([next[0], next[1] - 2]);\r\n        }\r\n        if (inBounds(next[1], next[0] + 2) && data.board[next[0] + 2][next[1]] === value) {\r\n            neighbours.push([next[0] + 2, next[1]]);\r\n        }\r\n        if (inBounds(next[1], next[0] - 2) && data.board[next[0] - 2][next[1]] === value) {\r\n            neighbours.push([next[0] - 2, next[1]]);\r\n        }\r\n        return neighbours;\r\n    }\r\n    function getCenter(a, b) {\r\n        return [(a[0] + b[0])/2, (a[1] + b[1])/2];\r\n    }\r\n    function mapClear(position) {\r\n        data.forceDraw(position, \"unvisited\");\r\n    }\r\n\r\n    // Pick a cell mark it as part of the maze and add walls to options\r\n    let next = [-1 , -1];\r\n    while (!inBounds(next[1], next[0])) {\r\n        next = [Math.floor(Math.random() * data.tableSize / 2) * 2 - 1, Math.floor(Math.random() * data.tableSize / 2) * 2 - 1];\r\n    }\r\n    let options = new Map();\r\n    [...getNeighboursWithValue(next, -1), next].forEach((e) => options.set(mapper(e), e));\r\n    mapClear(next);\r\n    \r\n    const algorithmIteration = () => {\r\n        // pick random wall from list\r\n        const optArr = []\r\n        const iter = options.values();\r\n        for (let val = iter.next(); !val.done; val=iter.next()) {\r\n            optArr.push(val.value);\r\n        }\r\n        next = optArr[Math.floor(Math.random() * optArr.length)];\r\n        options.delete(mapper(next));\r\n\r\n        const nextNeighbours = getNeighboursWithValue(next, 0);\r\n        if (nextNeighbours.length > 0) {\r\n            const n = nextNeighbours[Math.floor(Math.random() * nextNeighbours.length)];\r\n            mapClear(n);\r\n            mapClear(next);\r\n            mapClear(getCenter(n, next));\r\n        }\r\n        getNeighboursWithValue(next, -1).forEach((e) => options.set(mapper(e), e));\r\n\r\n        if (options.size === 0) {\r\n            data.draw([(data.tableSize - 1) / 2, (data.tableSize - 1) / 2 - 10], 'start-node');\r\n            data.draw([(data.tableSize - 1) / 2, (data.tableSize - 1) / 2 + 10], 'end-node');\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return algorithmIteration;\r\n}\r\n\r\nexport default GenPrimsMaze","async function GenMazeBorder (data) {\r\n    // values\r\n    let index = 0;\r\n    const algorithmIteration = () => {\r\n        if (index >= data.tableSize) return true;\r\n        data.forceDraw([0, index], \"wall\");\r\n        data.forceDraw([index, 0], \"wall\");\r\n        data.forceDraw([data.tableSize-1, data.tableSize-index-1], \"wall\");\r\n        data.forceDraw([data.tableSize-index-1, data.tableSize-1], \"wall\");\r\n        index++;\r\n        return index >= data.tableSize;\r\n    }\r\n    return algorithmIteration;\r\n}\r\n \r\nexport default GenMazeBorder;","import LinkedList from \"../data_structures/linked_list/LinkedList\";\r\nimport Node from \"../data_structures/linked_list/Node\"\r\nfunction FindDFSMaze(data, start, end) {\r\n    function mapper(position) {\r\n        return position[0] * data.tableSize + position[1];\r\n    }\r\n\r\n    function equalPosition(pos1, pos2) {\r\n        return pos1[0] === pos2[0] && pos1[1] === pos2[1];\r\n    }\r\n\r\n    function visit(curPos, prevPos) {\r\n        visited.set(mapper(curPos), prevPos)\r\n    }\r\n\r\n    function hasVisited(position) {\r\n        return visited.has(mapper(position));\r\n    }\r\n\r\n    function inBounds(x, y) {\r\n        return (x >= 0 && x < data.tableSize) && (y >= 0 && y < data.tableSize)\r\n    }\r\n    \r\n    function getUnvisitedNeighbours(position) {\r\n        const neighbours = [];\r\n        if (inBounds(position[1] + 1, position[0]) && data.board[position[0]][position[1] + 1] !== -1 && !hasVisited([position[0], position[1] + 1])) {\r\n            neighbours.push([position[0], position[1] + 1]);\r\n        }\r\n        if (inBounds(position[1] - 1, position[0]) && data.board[position[0]][position[1] - 1] !== -1 && !hasVisited([position[0], position[1] - 1])) {\r\n            neighbours.push([position[0], position[1] - 1]);\r\n        }\r\n        if (inBounds(position[1], position[0] + 1) && data.board[position[0] + 1][position[1]] !== -1 && !hasVisited([position[0] + 1, position[1]])) {\r\n            neighbours.push([position[0] + 1, position[1]]);\r\n        }\r\n        if (inBounds(position[1], position[0] - 1) && data.board[position[0] - 1][position[1]] !== -1 && !hasVisited([position[0] - 1, position[1]])) {\r\n            neighbours.push([position[0] - 1, position[1]]);\r\n        }\r\n        return neighbours.sort(() => (Math.random() > .5) ? 1 : -1);\r\n    }\r\n\r\n    const path = new Map();\r\n    const visited = new Map();\r\n    const stack = new LinkedList();\r\n    stack.push(start);\r\n    let prevNode = null;\r\n    \r\n    const algorithmIteration = () => {\r\n        if (stack.isEmpty()) return null; // not found\r\n        let curNode = stack.pop();\r\n        while (hasVisited(curNode)) {\r\n            if (stack.isEmpty()) return null;\r\n            curNode = stack.pop();\r\n        }\r\n        if (equalPosition(curNode, end)) {\r\n            let shortestPath = [];\r\n            // Get the shortest path as a list\r\n            let n = path.get(mapper(curNode));\r\n            while (n != null) {\r\n                shortestPath.push(n.value);\r\n                n = n.prev;\r\n            }\r\n            for (let b of shortestPath) {\r\n                data.highlightAlgoDetailCell(b , \"temp1\", false);\r\n            }\r\n            return shortestPath;\r\n        }\r\n        visit(curNode, prevNode);\r\n        prevNode = curNode;\r\n        data.highlightAlgoDetailCell(curNode, \"temp2\", false)\r\n        const neighbours = getUnvisitedNeighbours(curNode);\r\n        neighbours.forEach(neighbour => {\r\n            stack.push(neighbour);\r\n            let n = !path.has(mapper(curNode)) ? new Node(neighbour) : new Node(neighbour, path.get(mapper(curNode)));\r\n            path.set(mapper(neighbour), n);\r\n        });\r\n        return false;\r\n    }\r\n    return algorithmIteration;\r\n}\r\n\r\nexport default FindDFSMaze;","\r\nimport PriorityQueue from \"js-priority-queue\";\r\n\r\nfunction FindAStarMaze(data, start, end) {\r\n    function posToInt(position) {\r\n        return position[0] * data.tableSize + position[1];\r\n    }\r\n    function intToPos(int) {\r\n        const x = int % data.tableSize;\r\n        const y = (int - x) / data.tableSize;\r\n        return [y , x];\r\n    }\r\n    function comparator(a, b) {\r\n        let aScore = scores.get(a);\r\n        let bScore = scores.get(b);\r\n        return (aScore.g + aScore.h) - (bScore.g + bScore.h);\r\n    }\r\n\r\n    // Manhattan distance\r\n    function calculateH(position) {\r\n        return Math.abs(position[0] - end[0]) + Math.abs(position[1] - end[1]);\r\n    }\r\n\r\n    function inBounds(x, y) {\r\n        return (x >= 0 && x < data.tableSize) && (y >= 0 && y < data.tableSize)\r\n    }\r\n\r\n    function addNeighbours(pos) {\r\n        const position = intToPos(pos);\r\n        function getTentative_gScore(neighbour) {\r\n            return scores.get(pos).g + data.board[neighbour[0]][neighbour[1]] >= 0 ? data.board[neighbour[0]][neighbour[1]] + 1 : 1;\r\n        }\r\n        function processNeighbour(neighbour) {\r\n            if (!scores.has(posToInt(neighbour))) { // never been visited\r\n                scores.set(posToInt(neighbour), {g: Infinity, f: Infinity, h: calculateH(neighbour)})\r\n            }\r\n            const t_GScore = getTentative_gScore(neighbour);\r\n            if (t_GScore < scores.get(posToInt(neighbour)).g) {\r\n                path.set(posToInt(neighbour), pos);\r\n                const neighScore = scores.get(posToInt(neighbour));\r\n                neighScore.g = t_GScore;\r\n                neighScore.f = t_GScore + neighScore.h;\r\n                if (!openSet.has(posToInt(neighbour))) {\r\n                    open.queue(posToInt(neighbour));\r\n                    openSet.add(posToInt(neighbour));\r\n                    path.set(posToInt(neighbour), pos);\r\n                }\r\n            }\r\n        }\r\n        if (inBounds(position[1] + 1, position[0]) && data.board[position[0]][position[1] + 1] !== -1) {\r\n            processNeighbour([position[0], position[1] + 1]);\r\n        }\r\n        if (inBounds(position[1] - 1, position[0]) && data.board[position[0]][position[1] - 1] !== -1) {\r\n            processNeighbour([position[0], position[1] - 1]);\r\n        }\r\n        if (inBounds(position[1], position[0] + 1) && data.board[position[0] + 1][position[1]] !== -1) {\r\n            processNeighbour([position[0] + 1, position[1]]);\r\n        }\r\n        if (inBounds(position[1], position[0] - 1) && data.board[position[0] - 1][position[1]] !== -1) {\r\n            processNeighbour([position[0] - 1, position[1]]);\r\n        }\r\n    }\r\n\r\n    // Declare open and closed list\r\n    const open = new PriorityQueue({ comparator: (a, b) => {return comparator(a, b)}});\r\n    const openSet = new Set();\r\n\r\n    const scores = new Map();\r\n    let weight = 0;\r\n    const path = new Map();\r\n\r\n    // add starting node to the the open list\r\n    open.queue(posToInt(start));\r\n    scores.set(posToInt(start), {g: 0, h: calculateH(start), f: calculateH(start)});\r\n    openSet.add(posToInt(start));\r\n    \r\n    const algorithmIteration = () => {\r\n        if (open.length === 0) return null;\r\n        let curNode = open.dequeue();\r\n        openSet.delete(posToInt(curNode));\r\n        if (curNode === posToInt(end)) {\r\n            let shortestPath = [];\r\n            // Get the shortest path as a list\r\n            shortestPath.push(intToPos(curNode));\r\n            let n = path.get(curNode);\r\n            while (n != null) {\r\n                const position = intToPos(n);\r\n                shortestPath.push(position);\r\n                weight += data.board[position[0]][position[1]];\r\n                n = path.get(n);\r\n            }\r\n            for (let b of shortestPath) {\r\n                data.highlightAlgoDetailCell(b , \"temp1\", false);\r\n            }\r\n            return {path: shortestPath, weight: weight};\r\n        }\r\n        data.highlightAlgoDetailCell(intToPos(curNode), \"temp2\", false);\r\n        addNeighbours(curNode);\r\n        //return [];\r\n        return false;\r\n    }\r\n    return algorithmIteration;\r\n}\r\n\r\nexport default FindAStarMaze;\r\n","function PathfindingWrapper(data, algorithm, endAction = ()=>{}) {\r\n    let done = false;\r\n    let shortestPath = null;\r\n\r\n    const doLoop = () => {\r\n        const result = algorithm();\r\n        // Algorithm incomplete\r\n        if (result === false) {\r\n            return false;\r\n        }\r\n        // No path exists\r\n        else if (result === null) {\r\n            done = true;\r\n            return true;\r\n        }\r\n        // Path found\r\n        else {\r\n            done = true;\r\n            shortestPath = result;\r\n            return true;\r\n        }\r\n        \r\n    }\r\n\r\n    const timedLoop = async () => {\r\n        return new Promise((resolve, reject) => {\r\n            const runTimedLoop = async () => {\r\n                // Search completely stopped\r\n                if (!data.isPathFinding) {\r\n                    clearTimeout(timeout);\r\n                    resolve();\r\n                }\r\n                // Set to instant render\r\n                else if (data.renderSpeed === 0) {\r\n                    clearTimeout(timeout);\r\n                    await runAlgorithm();\r\n                    resolve();\r\n                }\r\n                // Set to step mode\r\n                else if (data.renderSpeed === -1) {\r\n                    clearTimeout(timeout);\r\n                    await runAlgorithm();\r\n                    resolve();\r\n                }\r\n                // Run algorithm and check if it is done\r\n                else {\r\n                    if (stepper()) {\r\n                        clearTimeout(timeout);\r\n                        resolve();\r\n                    } else {\r\n                        timeout = setTimeout(() => runTimedLoop(), data.renderSpeed);\r\n                    }\r\n                }\r\n            }\r\n            let timeout = setTimeout(() => runTimedLoop(), data.renderSpeed);\r\n        });\r\n    }\r\n\r\n    const instantLoop = () => {\r\n        while (!doLoop()) {\r\n            continue;\r\n        }\r\n        done = true;\r\n    }\r\n\r\n    const stepLoop = async () => {\r\n        return new Promise((resolve, reject) => {\r\n            const interval = setInterval(async () => {\r\n                // Maze Generation completely stopped\r\n                if (!data.isPathFinding) {\r\n                    resolve();\r\n                    clearInterval(interval);\r\n                }\r\n                // Set to instant render\r\n                else if (data.renderSpeed === 0 || data.isLive) {\r\n                    clearInterval(interval);\r\n                    await runAlgorithm();\r\n                    resolve();\r\n                }\r\n                // Set to timed render\r\n                else if (data.renderSpeed !== -1) {\r\n                    clearInterval(interval);\r\n                    await runAlgorithm();\r\n                    resolve();\r\n                }\r\n                // Run algorithm and check if it is done\r\n                else if (data.shouldStep) {\r\n                    if (stepper()) {\r\n                        resolve();\r\n                        clearInterval(interval);\r\n                    }\r\n                    data.shouldStep = false;\r\n                }\r\n            }, 20);\r\n        });\r\n    }\r\n\r\n    const stepper = () => {\r\n        for (let i = 0; i < data.stepSize; i++) {\r\n            if (doLoop()) {\r\n                done = true;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const runAlgorithm = async () => {\r\n        if (data.renderSpeed === 0 || data.isLive) {\r\n            instantLoop();\r\n        }\r\n        else if (data.renderSpeed === -1) {\r\n            await stepLoop();\r\n        }\r\n        else {\r\n            await timedLoop();\r\n        }\r\n        return shortestPath;\r\n    }\r\n    return { runAlgorithm, instantLoop };\r\n}\r\n\r\nexport default PathfindingWrapper;\r\n","class Graph {\r\n    constructor() {\r\n        this.adjacencyList = new Map();\r\n        this.numVertex = 0;\r\n    }\r\n    addVertex(vertex) {\r\n        this.adjacencyList.set(vertex, new Map());\r\n        this.numVertex++;\r\n    }\r\n    removeVertex(vertex) {\r\n        for (let verts of this.adjacencyList.keys()) {\r\n            if (verts === vertex) continue;\r\n            for (let vert of this.adjacencyList.get(verts).keys()) {\r\n                this.removeEdge(verts, vertex);\r\n            }\r\n        }\r\n        this.adjacencyList.delete(vertex);\r\n        this.numVertex--;\r\n    }\r\n    addEdge(src, dest, weight, path=null) {\r\n        if (path != null) {\r\n            weight = path.length;\r\n        }\r\n        this.adjacencyList.get(src).set(dest, {weight:weight, path:path});\r\n    }\r\n    removeEdge(src, dest) {\r\n        this.adjacencyList.get(src).delete(dest);\r\n    }\r\n    getEdgeWeight(src, dest) {\r\n        return this.adjacencyList.get(src).get(dest).weight;\r\n    }\r\n    getEdgePath(src, dest) {\r\n        return this.adjacencyList.get(src).get(dest).path;\r\n    }\r\n    getOutboundEdges(vertex) {\r\n        return this.adjacencyList.get(vertex).entries();\r\n    }\r\n}\r\nexport default Graph;","import Graph from '../data_structures/graph/Graph'\r\nimport PathfindingWrapper from '@/components/algorithms/pathfinding/PathfindingWrapper'\r\n\r\nconst asyncWait = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n// For this function to work, a start and end node must be provided\r\nfunction SearchRuntimeManager(data) {\r\n    // Check if start and end are provided otherwise return false\r\n    // This will be handled by frontend with an alert\r\n    const init = () => {\r\n        // Add start node to graph\r\n        graph.addVertex(0);\r\n        vertices.set(0, data.startingPosition);\r\n        //Add intermediate nodes to the graph\r\n        for (let i = 0; i < data.flags.length; i++) {\r\n            graph.addVertex(i + 1)\r\n            vertices.set(i + 1, data.flags[i]);\r\n        }\r\n        // Add end node to graph\r\n        graph.addVertex(1 + data.flags.length);\r\n        vertices.set(1 + data.flags.length, data.endingPosition);\r\n    }\r\n\r\n\r\n    const doSearch = () => {\r\n        let src = 0;\r\n        let dest = 1;\r\n        const run = async () => {\r\n            if (src >= graph.numVertex - 1) {\r\n                return true;\r\n            }\r\n            // Run path finder\r\n            const path = await PathfindingWrapper(\r\n                data,\r\n                await data.pathAlgorithm(data, vertices.get(src), vertices.get(dest)))\r\n                .runAlgorithm();\r\n            // Check if no path exist\r\n            if (path === null) {\r\n                data.rerenderBoard();\r\n                return true;\r\n            }\r\n            graph.addEdge(src, dest, path.weight, path.path);\r\n            dest++;\r\n            if (dest >= graph.numVertex) {\r\n                src++;\r\n                dest = src + 1;\r\n            }\r\n            return false;\r\n        }\r\n        return run;\r\n    }\r\n\r\n    const doLink = () => {\r\n        let src = 0;\r\n        let dest = 1;\r\n        const run = async () => {\r\n            if (src >= graph.numVertex - 1) {\r\n                return true;\r\n            }\r\n            // Run path finder\r\n            const path = await PathfindingWrapper(\r\n                data,\r\n                await data.pathAlgorithm(data, vertices.get(src), vertices.get(dest)))\r\n                .runAlgorithm();\r\n            // Check if no path exist\r\n            if (path === null) {\r\n                data.rerenderBoard();\r\n                return true;\r\n            }\r\n            graph.addEdge(src, dest, path.weight, path.path);\r\n            dest++;\r\n            if (dest >= graph.numVertex) {\r\n                src++;\r\n                dest = src + 1;\r\n            }\r\n            return false;\r\n        }\r\n        return run;\r\n    }\r\n\r\n    const stepper = async () => {\r\n        if (!doneSearch) {\r\n            doneSearch = await search();\r\n            data.isPathFinding = !doneSearch;\r\n            return false;\r\n        } \r\n        else if (!doneLink) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const timedLoop = async () => {\r\n        return new Promise((resolve, reject) => {\r\n            const runTimedLoop = async () => {\r\n                // Search completely stopped\r\n                if (!data.isPathFinding) {\r\n                    clearTimeout(timeout);\r\n                    resolve();\r\n                }\r\n                // Set to instant render\r\n                else if (data.renderSpeed === 0 || data.isLive) {\r\n                    clearTimeout(timeout);\r\n                    await runAlgorithm();\r\n                    resolve();\r\n                }\r\n                // Set to step mode\r\n                else if (data.renderSpeed === -1) {\r\n                    clearTimeout(timeout);\r\n                    await runAlgorithm();\r\n                    resolve();\r\n                }\r\n                // Run algorithm and check if it is done\r\n                else {\r\n                    if (await stepper()) {\r\n                        clearTimeout(timeout);\r\n                        resolve();\r\n                    } else {\r\n                        timeout = setTimeout(() => runTimedLoop(), data.renderSpeed);\r\n                    }\r\n                    await asyncWait(Math.min(data.renderSpeed / 100 * 2500, 1000));\r\n                    data.rerenderBoard();\r\n                }\r\n            }\r\n            let timeout = setTimeout(() => runTimedLoop(), data.renderSpeed);\r\n        });\r\n    }\r\n\r\n    const instantLoop = async () => {\r\n        while (!await search()) {\r\n            continue;\r\n        }\r\n        data.isPathFinding = false;\r\n    }\r\n\r\n    const stepLoop = async () => {\r\n        // return new Promise((resolve, reject) => {\r\n        //     const interval = setInterval(async () => {\r\n        //         // Maze Generation completely stopped\r\n        //         if (!data.isPathFinding) {\r\n        //             resolve();\r\n        //             clearInterval(interval);\r\n        //         }\r\n        //         // Set to instant render\r\n        //         else if (data.renderSpeed === 0) {\r\n        //             clearInterval(interval);\r\n        //             await runAlgorithm();\r\n        //             resolve();\r\n        //         }\r\n        //         // Set to timed render\r\n        //         else if (data.renderSpeed !== -1) {\r\n        //             clearInterval(interval);\r\n        //             await runAlgorithm();\r\n        //             resolve();\r\n        //         }\r\n        //         // Run algorithm and check if it is done\r\n        //         else if (data.shouldStep) {\r\n        //             if (stepper()) {\r\n        //                 resolve();\r\n        //                 clearInterval(interval);\r\n        //             }\r\n        //             data.shouldStep = false;\r\n        //         }\r\n        //     }, 20);\r\n        // });\r\n    }\r\n\r\n    const runAlgorithm = async () => {\r\n        if (data.renderSpeed === 0 || data.isLive) {\r\n            await instantLoop();\r\n        }\r\n        else if (data.renderSpeed === -1) {\r\n            await stepLoop();\r\n        }\r\n        else {\r\n            await timedLoop();\r\n        }\r\n    }\r\n\r\n    if (data.startingPosition === null || data.endingPosition === null) return () => { data.isPathFinding = false };\r\n    let doneSearch = false;\r\n    let doneLink = false;\r\n    let vertices = new Map();\r\n    const graph = new Graph();\r\n    const search = doSearch();\r\n    init();\r\n    return runAlgorithm;\r\n}\r\n\r\nexport default SearchRuntimeManager;\r\n","import { render } from \"./Board.vue?vue&type=template&id=1c808876&lang=true\"\nimport script from \"./Board.vue?vue&type=script&lang=js\"\nexport * from \"./Board.vue?vue&type=script&lang=js\"\n\nimport \"./Board.vue?vue&type=style&index=0&id=1c808876&lang=scss\"\n\nimport exportComponent from \"D:\\\\Projects\\\\Frontend\\\\Algorithms-Visualisation\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=5ec1fbc9\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5ec1fbc9&lang=scss\"\n\nimport exportComponent from \"D:\\\\Projects\\\\Frontend\\\\Algorithms-Visualisation\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\n\r\ncreateApp(App).mount('#app')\r\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./SidebarOptions.vue?vue&type=style&index=0&id=113bf3f7&lang=scss&scoped=true\"","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./PillToggleSwitch.vue?vue&type=style&index=0&id=3fa96e2c&lang=scss\""],"sourceRoot":""}